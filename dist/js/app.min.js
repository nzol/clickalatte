/*! AdminLTE app.js
 * ================
 * Main JS application file for AdminLTE v2. This file
 * should be included in all pages. It controls some layout
 * options and implements exclusive AdminLTE plugins.
 *
 * @Author  Almsaeed Studio
 * @Support <http://www.almsaeedstudio.com>
 * @Email   <support@almsaeedstudio.com>
 * @version 2.3.3
 * @license MIT <http://opensource.org/licenses/MIT>
 */
function _init(){"use strict";$.AdminLTE.layout={activate:function(){var a=this;a.fix(),a.fixSidebar(),$(window,".wrapper").resize(function(){a.fix(),a.fixSidebar()})},fix:function(){var a=$(".main-header").outerHeight()+$(".main-footer").outerHeight(),b=$(window).height(),c=$(".sidebar").height();if($("body").hasClass("fixed"))$(".content-wrapper, .right-side").css("min-height",b-$(".main-footer").outerHeight());else{var d;b>=c?($(".content-wrapper, .right-side").css("min-height",b-a),d=b-a):($(".content-wrapper, .right-side").css("min-height",c),d=c);var e=$($.AdminLTE.options.controlSidebarOptions.selector);"undefined"!=typeof e&&e.height()>d&&$(".content-wrapper, .right-side").css("min-height",e.height())}},fixSidebar:function(){return $("body").hasClass("fixed")?("undefined"==typeof $.fn.slimScroll&&window.console&&window.console.error("Error: the fixed layout requires the slimscroll plugin!"),void($.AdminLTE.options.sidebarSlimScroll&&"undefined"!=typeof $.fn.slimScroll&&($(".sidebar").slimScroll({destroy:!0}).height("auto"),$(".sidebar").slimscroll({height:$(window).height()-$(".main-header").height()+"px",color:"rgba(0,0,0,0.2)",size:"3px"})))):void("undefined"!=typeof $.fn.slimScroll&&$(".sidebar").slimScroll({destroy:!0}).height("auto"))}},$.AdminLTE.pushMenu={activate:function(a){var b=$.AdminLTE.options.screenSizes;$(document).on("click",a,function(a){a.preventDefault(),$(window).width()>b.sm-1?$("body").hasClass("sidebar-collapse")?$("body").removeClass("sidebar-collapse").trigger("expanded.pushMenu"):$("body").addClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").hasClass("sidebar-open")?$("body").removeClass("sidebar-open").removeClass("sidebar-collapse").trigger("collapsed.pushMenu"):$("body").addClass("sidebar-open").trigger("expanded.pushMenu")}),$(".content-wrapper").click(function(){$(window).width()<=b.sm-1&&$("body").hasClass("sidebar-open")&&$("body").removeClass("sidebar-open")}),($.AdminLTE.options.sidebarExpandOnHover||$("body").hasClass("fixed")&&$("body").hasClass("sidebar-mini"))&&this.expandOnHover()},expandOnHover:function(){var a=this,b=$.AdminLTE.options.screenSizes.sm-1;$(".main-sidebar").hover(function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-collapse")&&$(window).width()>b&&a.expand()},function(){$("body").hasClass("sidebar-mini")&&$("body").hasClass("sidebar-expanded-on-hover")&&$(window).width()>b&&a.collapse()})},expand:function(){$("body").removeClass("sidebar-collapse").addClass("sidebar-expanded-on-hover")},collapse:function(){$("body").hasClass("sidebar-expanded-on-hover")&&$("body").removeClass("sidebar-expanded-on-hover").addClass("sidebar-collapse")}},$.AdminLTE.tree=function(a){var b=this,c=$.AdminLTE.options.animationSpeed;$(document).on("click",a+" li a",function(a){var d=$(this),e=d.next();if(e.is(".treeview-menu")&&e.is(":visible")&&!$("body").hasClass("sidebar-collapse"))e.slideUp(c,function(){e.removeClass("menu-open")}),e.parent("li").removeClass("active");else if(e.is(".treeview-menu")&&!e.is(":visible")){var f=d.parents("ul").first(),g=f.find("ul:visible").slideUp(c);g.removeClass("menu-open");var h=d.parent("li");e.slideDown(c,function(){e.addClass("menu-open"),f.find("li.active").removeClass("active"),h.addClass("active"),b.layout.fix()})}e.is(".treeview-menu")&&a.preventDefault()})},$.AdminLTE.controlSidebar={activate:function(){var a=this,b=$.AdminLTE.options.controlSidebarOptions,c=$(b.selector),d=$(b.toggleBtnSelector);d.on("click",function(d){d.preventDefault(),c.hasClass("control-sidebar-open")||$("body").hasClass("control-sidebar-open")?a.close(c,b.slide):a.open(c,b.slide)});var e=$(".control-sidebar-bg");a._fix(e),$("body").hasClass("fixed")?a._fixForFixed(c):$(".content-wrapper, .right-side").height()<c.height()&&a._fixForContent(c)},open:function(a,b){b?a.addClass("control-sidebar-open"):$("body").addClass("control-sidebar-open")},close:function(a,b){b?a.removeClass("control-sidebar-open"):$("body").removeClass("control-sidebar-open")},_fix:function(a){var b=this;$("body").hasClass("layout-boxed")?(a.css("position","absolute"),a.height($(".wrapper").height()),$(window).resize(function(){b._fix(a)})):a.css({position:"fixed",height:"auto"})},_fixForFixed:function(a){a.css({position:"fixed","max-height":"100%",overflow:"auto","padding-bottom":"50px"})},_fixForContent:function(a){$(".content-wrapper, .right-side").css("min-height",a.height())}},$.AdminLTE.boxWidget={selectors:$.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,icons:$.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,animationSpeed:$.AdminLTE.options.animationSpeed,activate:function(a){var b=this;a||(a=document),$(a).on("click",b.selectors.collapse,function(a){a.preventDefault(),b.collapse($(this))}),$(a).on("click",b.selectors.remove,function(a){a.preventDefault(),b.remove($(this))})},collapse:function(a){var b=this,c=a.parents(".box").first(),d=c.find("> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer");c.hasClass("collapsed-box")?(a.children(":first").removeClass(b.icons.open).addClass(b.icons.collapse),d.slideDown(b.animationSpeed,function(){c.removeClass("collapsed-box")})):(a.children(":first").removeClass(b.icons.collapse).addClass(b.icons.open),d.slideUp(b.animationSpeed,function(){c.addClass("collapsed-box")}))},remove:function(a){var b=a.parents(".box").first();b.slideUp(this.animationSpeed)}}}if("undefined"==typeof jQuery)throw new Error("AdminLTE requires jQuery");$.AdminLTE={},$.AdminLTE.options={navbarMenuSlimscroll:!0,navbarMenuSlimscrollWidth:"3px",navbarMenuHeight:"200px",animationSpeed:500,sidebarToggleSelector:"[data-toggle='offcanvas']",sidebarPushMenu:!0,sidebarSlimScroll:!0,sidebarExpandOnHover:!1,enableBoxRefresh:!0,enableBSToppltip:!0,BSTooltipSelector:"[data-toggle='tooltip']",enableFastclick:!0,enableControlSidebar:!0,controlSidebarOptions:{toggleBtnSelector:"[data-toggle='control-sidebar']",selector:".control-sidebar",slide:!0},enableBoxWidget:!0,boxWidgetOptions:{boxWidgetIcons:{collapse:"fa-minus",open:"fa-plus",remove:"fa-times"},boxWidgetSelectors:{remove:'[data-widget="remove"]',collapse:'[data-widget="collapse"]'}},directChat:{enable:!0,contactToggleSelector:'[data-widget="chat-pane-toggle"]'},colors:{lightBlue:"#3c8dbc",red:"#f56954",green:"#00a65a",aqua:"#00c0ef",yellow:"#f39c12",blue:"#0073b7",navy:"#001F3F",teal:"#39CCCC",olive:"#3D9970",lime:"#01FF70",orange:"#FF851B",fuchsia:"#F012BE",purple:"#8E24AA",maroon:"#D81B60",black:"#222222",gray:"#d2d6de"},screenSizes:{xs:480,sm:768,md:992,lg:1200}},$(function(){"use strict";$("body").removeClass("hold-transition"),"undefined"!=typeof AdminLTEOptions&&$.extend(!0,$.AdminLTE.options,AdminLTEOptions);var a=$.AdminLTE.options;_init(),$.AdminLTE.layout.activate(),$.AdminLTE.tree(".sidebar"),a.enableControlSidebar&&$.AdminLTE.controlSidebar.activate(),a.navbarMenuSlimscroll&&"undefined"!=typeof $.fn.slimscroll&&$(".navbar .menu").slimscroll({height:a.navbarMenuHeight,alwaysVisible:!1,size:a.navbarMenuSlimscrollWidth}).css("width","100%"),a.sidebarPushMenu&&$.AdminLTE.pushMenu.activate(a.sidebarToggleSelector),a.enableBSToppltip&&$("body").tooltip({selector:a.BSTooltipSelector}),a.enableBoxWidget&&$.AdminLTE.boxWidget.activate(),a.enableFastclick&&"undefined"!=typeof FastClick&&FastClick.attach(document.body),a.directChat.enable&&$(document).on("click",a.directChat.contactToggleSelector,function(){var a=$(this).parents(".direct-chat").first();a.toggleClass("direct-chat-contacts-open")}),$('.btn-group[data-toggle="btn-toggle"]').each(function(){var a=$(this);$(this).find(".btn").on("click",function(b){a.find(".btn.active").removeClass("active"),$(this).addClass("active"),b.preventDefault()})})}),function(a){"use strict";a.fn.boxRefresh=function(b){function c(a){a.append(f),e.onLoadStart.call(a)}function d(a){a.find(f).remove(),e.onLoadDone.call(a)}var e=a.extend({trigger:".refresh-btn",source:"",onLoadStart:function(a){return a},onLoadDone:function(a){return a}},b),f=a('<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>');return this.each(function(){if(""===e.source)return void(window.console&&window.console.log("Please specify a source first - boxRefresh()"));var b=a(this),f=b.find(e.trigger).first();f.on("click",function(a){a.preventDefault(),c(b),b.find(".box-body").load(e.source,function(){d(b)})})})}}(jQuery),function(a){"use strict";a.fn.activateBox=function(){a.AdminLTE.boxWidget.activate(this)},a.fn.toggleBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.collapse,this);a.AdminLTE.boxWidget.collapse(b)},a.fn.removeBox=function(){var b=a(a.AdminLTE.boxWidget.selectors.remove,this);a.AdminLTE.boxWidget.remove(b)}}(jQuery),function(a){"use strict";a.fn.todolist=function(b){var c=a.extend({onCheck:function(a){return a},onUncheck:function(a){return a}},b);return this.each(function(){"undefined"!=typeof a.fn.iCheck?(a("input",this).on("ifChecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onCheck.call(b)}),a("input",this).on("ifUnchecked",function(){var b=a(this).parents("li").first();b.toggleClass("done"),c.onUncheck.call(b)})):a("input",this).on("change",function(){var b=a(this).parents("li").first();b.toggleClass("done"),a("input",b).is(":checked")?c.onCheck.call(b):c.onUncheck.call(b)})})}}(jQuery);

/* CLICKALATTE */




var regauthlocation = "http://172.18.1.120/clickaendpoint/regauth/"
var serverlocation = "http://172.18.1.120/clickaendpoint/"

function appLoad() {

  // GET A TOKEN

  if(localStorage.getItem('regauth_token')===null) {



  

  $.ajax({
     type: 'GET',
      url: regauthlocation + "newtoken.php",
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
         localStorage.setItem('regauth_token',json.jsonReturns[0].returnData);
      
      
      },
      error: function(e) {
              alert("Unable to obtain a token")
      
      }
  });

}


 appload2();
   



}

   var regauthtoken = localStorage.getItem('regauth_token')


function appload2() {
   //var regauthtoken = localStorage.getItem('regauth_token')


  $.ajax({
     type: 'GET',
      url: regauthlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=checkSignIn",
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
          if(json.jsonReturns[0].returnData=="registered") {
              // We are running online and the user is not a guest. Now show the last viewed offline screen. Will go to the dashboard by default for now
              loadScreen("dashboard")

              storeUserInfo();
          }
          else {
         
          // We are running online and the user is a guest. Must be connected to server to sign in
          $(".dropdown").hide();
          $(".main-sidebar").hide();
          $("#searchbar").hide();
         loadScreen("signin")   
      
  }
      },
      error: function(e) {
              alert("You need an internet connection to use Clickalatte")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });

}



function loadScreen(screenid) {

  $(".content-wrapper").fadeOut(500);


  $("#clicka_"+screenid).fadeIn();



} 


function signOn() {

  var Email = document.getElementById("inputEmail3").value;
  var PasswordBox = document.getElementById("inputPassword3").value;

  $.ajax({
     type: 'GET',
      url: regauthlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=signIn&EmailAddress="+Email+"&Password="+PasswordBox,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
      	alert(json.jsonReturns[0].returnData)
          if(json.jsonReturns[0].returnData=="success") {
              
              // Sign on was a succes

              alert("SIGNED ON!");

               $(".dropdown").show();
          $(".main-sidebar").show();



              loadScreen("dashboard");

          }
          else {
           // Sign on failed

           alert("Sign on failed. Please try again");
      
  }
      },
      error: function(e) {
              alert("YOU ARE OFFLINE "+e.message)
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });


}

function mySession() {


  $.ajax({
     type: 'GET',
      url: regauthlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=printToken",
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
        alert(json.jsonReturns[0].returnData)
         
      },
      error: function(e) {
              alert("UNABLE TO GET IT")
      
      }
  });


}

function storeUserInfo() {

  $.ajax({
     type: 'GET',
      url: regauthlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=getUserInfo",
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        var UserInfoSplit = json.jsonReturns[0].returnData.split(",")
        var UserId = UserInfoSplit[0]
        var EmailAddress = UserInfoSplit[1]
        var FullName = UserInfoSplit[2]

  
      },
      error: function(e) {
              alert("YOU ARE OFFLINE "+e.message)
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });


}



function findCoffeeTooltip() {


  $("#findcoffeetooltip").show();


}

// LOCATION STUFF

var geocoder = new google.maps.Geocoder();


function findCoffeeMyLocation() {


    
    loadScreen("storelist")


    setAppTitle("SEARCH")

    document.getElementById("backbutton").onclick = function() { loadScreen("dashboard") }
    

    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition,alert("Clickalatte has experienced an error with your device. It is not communicating your location to Clickalatte. Please use the search bar to enter your desired store or location."));
      

    } else {
        alert("Clickalatte can not find any coffee, your device does not let Clickalatte automatically detect your location. Please tell us your location by choosing your location below...");
    }

}


function showPosition(position) {


  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=storesMyLocation&MyLat="+position.coords.latitude+"&MyLong="+position.coords.longitude,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        document.getElementById("coffeestorelist").innerHTML = json.jsonReturns[0].returnData;

  
      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });


}

function setAppTitle(title) {

  document.getElementById("appTitle").innerHTML = title;

}

function loadStoreMenu(storeId) {



  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=storeCategories&StoreId="+storeId,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        document.getElementById("storemenulist").innerHTML = json.jsonReturns[0].returnData;

        loadScreen("storemenu")

        document.getElementById("backbutton").onclick = function() { findCoffeeMyLocation() }

        showStoreName(storeId)
    

      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });

  


}


function showStoreName(storeId) {


  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=storeName&StoreId="+storeId,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        document.getElementById("appTitle").innerHTML = json.jsonReturns[0].returnData;

  
      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });



}



function loadCategoryItems(categoryId,storeId) {

  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=categoryItems&categoryId="+categoryId,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        document.getElementById("storemenulist").innerHTML = json.jsonReturns[0].returnData;
        document.getElementById("backbutton").onclick = function() { loadStoreMenu(storeId) }

  
      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });

  //loadScreen("storemenu")



}


function loadProduct(productId) {

  loadScreen("addproduct")

  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=productPage&ProductId="+productId,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        document.getElementById("productoptions").innerHTML = json.jsonReturns[0].returnData;

       displayProductInfo(productId)
    

      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });

}

function displayProductInfo(productId) {

  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=productInfo&ProductId="+productId,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        var respSplit = json.jsonReturns[0].returnData.split(",");

        setAppTitle(respSplit[0])
       document.getElementById("itemPrice").innerHTML = respSplit[1]
       document.getElementById("basePrice").value = respSplit[1]
    
      document.getElementById("optIds").value=respSplit[2]

      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });


}

function increaseQnt(optionId) {

  document.getElementById("value_"+optionId).innerHTML = parseInt(document.getElementById("value_"+optionId).innerHTML) + 1
  document.getElementById("formvalue_"+optionId).value = parseInt(document.getElementById("value_"+optionId).innerHTML)

updatePrice()


}

function decreaseQnt(optionId) {

  document.getElementById("value_"+optionId).innerHTML = parseInt(document.getElementById("value_"+optionId).innerHTML) - 1
  document.getElementById("formvalue_"+optionId).value = parseInt(document.getElementById("value_"+optionId).innerHTML)
updatePrice()

}


function updatePrice() {

  var optIds = document.getElementById("optIds").value;
  var optSplit = optIds.split("|")

  var priceTally = document.getElementById("basePrice").value;


  for (var i = optSplit.length - 1; i >= 0; i--) {
    // first select all elements with name formvalue_i
    var tagType = $("input[name=formvalue_"+optSplit[i]+"]").attr('type')
    if(tagType=="radio") {
        var priceHere = $("input[name=formvalue_"+optSplit[i]+"]:checked").val();
        if(priceHere===undefined) {
          // do nothing
        } else {
          priceTally = parseFloat(priceTally) + parseFloat(priceHere)
        }

    }
    else if(tagType=="hidden") {
      // must be quantity field
      var qntValue = document.getElementById("formvalue_"+optSplit[i]).value;
      var defaultVal = document.getElementById("defaultvalue_"+optSplit[i]).value;
      var priceAboveDefault = document.getElementById("priceabovedefault_"+optSplit[i]).value;

      if(qntValue > defaultVal) {
        var equationVal = parseFloat(qntValue)-parseFloat(defaultVal);
        var price = equationVal*priceAboveDefault;
      }
      else {
        price = 0;
      }

      priceTally = parseFloat(priceTally)+parseFloat(price);

    }
    

    //alert("IN FOR LOOP: " + priceTally)



  };
  priceTally = priceTally.toPrecision(3)
  document.getElementById("itemPrice").innerHTML = priceTally



}


$('#productOrder').change(function() {
   updatePrice()
})


function addToOrder() {

  var optIds = document.getElementById("optIds").value;
  var optSplit = optIds.split("|")

  var UploadValue = "";

  for (var i = optSplit.length - 1; i >= 0; i--) {
    // first select all elements with name formvalue_i
    var tagType = $("input[name=formvalue_"+optSplit[i]+"]").attr('type')
    if(tagType=="radio") {
        var selectedValue = $("input[name=formvalue_"+optSplit[i]+"]:checked").attr('Id');
        if(selectedValue===undefined) {
          // do nothing
        } else {
          UploadValue = UploadValue + "," + optSplit[i] + "=" + selectedValue;
        }

    }
    else if(tagType=="hidden") {
      // must be quantity field
      var qntValue = document.getElementById("formvalue_"+optSplit[i]).value;
      
      UploadValue = UploadValue + "," + optSplit[i] + "=" + qntValue;

    }
    
  }


  $.ajax({
     type: 'GET',
      url: serverlocation + "endpoint.php?regauth_token="+regauthtoken+"&Action=addToOrder&UploadData="+UploadValue,
      async: false,
      jsonpCallback: 'jsonCallback',
      contentType: "application/json",
      dataType: 'jsonp',
      success: function(json) {
         
        loadOrderSummary()
    

      },
      error: function(e) {
              alert("An error has occured which has stopped the last request from being executed. Please try again soon.")
              // We are running offline and will show the last viewed offline screen if available.
      
      }
  });



}